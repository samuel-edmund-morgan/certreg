## Example nginx config for certreg (production hardening)
## Replace certs.nasbu.edu.ua with your domain.

limit_req_zone $binary_remote_addr zone=api_status:10m rate=60r/m;
limit_req_zone $binary_remote_addr zone=api_admin:10m  rate=10r/m;

server {
    listen 80;
    listen [::]:80;
    server_name certs.example.org;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name certs.example.org;

    root /var/www/certreg;
    index index.php;

    ssl_certificate     /etc/letsencrypt/live/certs.example.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/certs.example.org/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/certs.example.org/chain.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 2s;

    server_tokens off;
    client_max_body_size 10m;

    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    # Content-Security-Policy emitted by PHP header.php. To enforce in nginx instead, remove from PHP and uncomment:
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; font-src 'self'; object-src 'none'; base-uri 'none'; frame-ancestors 'none'; form-action 'self'; connect-src 'self'; upgrade-insecure-requests" always;

    fastcgi_connect_timeout 5s;
    fastcgi_send_timeout 15s;
    fastcgi_read_timeout 15s;

    set $php_values "open_basedir=/var/www/certreg/:/tmp/\nmax_execution_time=15\nmax_input_time=15\nmemory_limit=64M";
    fastcgi_param PHP_VALUE $php_values;

    access_log /var/log/nginx/certreg.access.log;
    error_log  /var/log/nginx/certreg.error.log warn;

    location = / { return 403; }
    location ~ ^/vendor/ { return 403; }

    # Public verify (GET only)
    location = /verify.php {
        limit_except GET HEAD { deny all; }
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
    }
    # Public status API
    location = /api/status.php {
        limit_req zone=api_status burst=20 nodelay;
        limit_except GET HEAD { deny all; }
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
    }

    # Admin UI (replace IP allow list)
    location ~ ^/(issue_token|tokens|token|events|admin|login|logout|qr)\.php$ {
        allow 203.0.113.10; # replace with real IPs
        deny all;
        limit_except GET HEAD POST { deny all; }
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
    }

    # Admin API (POST endpoints)
    location ~ ^/api/(register|revoke|unrevoke|delete_token|bulk_action)\.php$ {
        allow 203.0.113.10; # replace with real IPs
        deny all;
        limit_req zone=api_admin burst=10 nodelay;
        limit_except POST { deny all; }
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
    }
    location = /api/events.php {
        allow 203.0.113.10; # replace with real IPs
        deny all;
        limit_except GET HEAD { deny all; }
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
    }

    # Block any other PHP
    location ~ \.php$ { return 403; }

    # Static assets
    location ~* \.(?:css|js|map|png|jpg|jpeg|gif|svg|ico|ttf|woff2?|webp|avif)$ {
        expires 7d;
        access_log off;
        add_header Cache-Control "public, immutable";
    }
    location ^~ /assets/ {
        try_files $uri =404;
        access_log off;
        expires 7d;
        add_header Cache-Control "public, immutable";
    }
}
## Example nginx config for privacy-first certreg
## Replace certs.nasbu.edu.ua and IP allow-list with your values.
## Hardened: whitelist only needed PHP entrypoints.

map $http_upgrade $connection_upgrade { default upgrade; '' close; }

limit_req_zone $binary_remote_addr zone=api_status:10m rate=60r/m; # rate limit for public status

server {
    server_name certs.nasbu.edu.ua;
    listen 80;
    listen [::]:80;
    return 301 https://$host$request_uri;
}

server {
    server_name certs.nasbu.edu.ua;
    root /var/www/certreg;
    index index.php; # not really used; root is forbidden

    # Security headers
    client_max_body_size 10m;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy no-referrer-when-downgrade always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Forbid root
    location = / { return 403; }

    # Public verification endpoint (new model)
    location = /verify.php {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
    }

    # Public QR image generator (contains no PII)
    location = /qr.php {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
    }

    # Public status API (only /api/status.php)
    location = /api/status.php {
        limit_req zone=api_status burst=20 nodelay;
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
    }

    # Admin-only APIs (register, revoke, unrevoke, delete) — restrict by IP
    location ~ ^/api/(register|revoke|unrevoke|delete_token)\.php$ {
        allow 94.45.140.194; # TODO: replace / curate list
        allow 94.45.140.195;
        allow 94.45.140.196;
        allow 94.45.140.197;
        allow 94.45.140.198;
        allow 195.137.202.34;
        allow 94.158.95.219;
        deny all;
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
    }

    # Issuance UI (admin browser) — restrict by IP
    location = /issue_token.php {
        allow 94.45.140.194;
        allow 94.45.140.195;
        allow 94.45.140.196;
        allow 94.45.140.197;
        allow 94.45.140.198;
        allow 195.137.202.34;
        allow 94.158.95.219;
        deny all;
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
    }

    # Tokens list & detail (admin) — restrict by IP
    location ~ ^/(tokens|token)\.php$ {
        allow 94.45.140.194;
        allow 94.45.140.195;
        allow 94.45.140.196;
        allow 94.45.140.197;
        allow 94.45.140.198;
        allow 195.137.202.34;
        allow 94.158.95.219;
        deny all;
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
    }

    # Login / logout (optional: also restrict by IP or add basic auth)
    location ~ ^/(admin|login|logout)\.php$ {
        allow 94.45.140.194;
        allow 94.45.140.195;
        allow 94.45.140.196;
        allow 94.45.140.197;
        allow 94.45.140.198;
        allow 195.137.202.34;
        allow 94.158.95.219;
        deny all;
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
    }

    # Deny all other PHP entrypoints (defense-in-depth)
    location ~ \.php$ { return 403; }

    # Static assets
    location ~* \.(?:css|js|png|jpg|jpeg|gif|svg|ico|ttf|woff2?)$ {
        expires 7d;
        access_log off;
        add_header Cache-Control "public";
    }

    listen [::]:443 ssl http2;
    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/certs.nasbu.edu.ua/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/certs.nasbu.edu.ua/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}
